version: '3.8'

services:
  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nginx-tms
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./backend/media:/app/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - tms_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tms_backend_prod
    command: >
      bash -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/tms_db
    depends_on:
      - db
    networks:
      - tms_net

  db:
    image: postgres:14
    container_name: tms_db_prod
    environment:
      POSTGRES_DB: tms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tms_net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c"
    command: "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done"
    networks:
      - tms_net

networks:
  tms_net:

volumes:
  postgres_data:
